<?php

namespace Angel\Document\Hydrator;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class DocumentsUserInfoHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="string") */
        if (isset($data['openid'])) {
            $value = $data['openid'];
            $return = (string) $value;
            $this->class->reflFields['openid']->setValue($document, $return);
            $hydratedData['openid'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['subscribe'])) {
            $value = $data['subscribe'];
            $return = (int) $value;
            $this->class->reflFields['subscribe']->setValue($document, $return);
            $hydratedData['subscribe'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['nickname'])) {
            $value = $data['nickname'];
            $return = (string) $value;
            $this->class->reflFields['nickname']->setValue($document, $return);
            $hydratedData['nickname'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['sex'])) {
            $value = $data['sex'];
            $return = (int) $value;
            $this->class->reflFields['sex']->setValue($document, $return);
            $hydratedData['sex'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['language'])) {
            $value = $data['language'];
            $return = (string) $value;
            $this->class->reflFields['language']->setValue($document, $return);
            $hydratedData['language'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['city'])) {
            $value = $data['city'];
            $return = (string) $value;
            $this->class->reflFields['city']->setValue($document, $return);
            $hydratedData['city'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['province'])) {
            $value = $data['province'];
            $return = (string) $value;
            $this->class->reflFields['province']->setValue($document, $return);
            $hydratedData['province'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['country'])) {
            $value = $data['country'];
            $return = (string) $value;
            $this->class->reflFields['country']->setValue($document, $return);
            $hydratedData['country'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['headimgurl'])) {
            $value = $data['headimgurl'];
            $return = (string) $value;
            $this->class->reflFields['headimgurl']->setValue($document, $return);
            $hydratedData['headimgurl'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['subscribe_time'])) {
            $value = $data['subscribe_time'];
            $return = (string) $value;
            $this->class->reflFields['subscribe_time']->setValue($document, $return);
            $hydratedData['subscribe_time'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['last_time'])) {
            $value = $data['last_time'];
            $return = (int) $value;
            $this->class->reflFields['last_time']->setValue($document, $return);
            $hydratedData['last_time'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['access_token'])) {
            $value = $data['access_token'];
            $return = (string) $value;
            $this->class->reflFields['access_token']->setValue($document, $return);
            $hydratedData['access_token'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['usertype'])) {
            $value = $data['usertype'];
            $return = (string) $value;
            $this->class->reflFields['usertype']->setValue($document, $return);
            $hydratedData['usertype'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['name'])) {
            $value = $data['name'];
            $return = (string) $value;
            $this->class->reflFields['name']->setValue($document, $return);
            $hydratedData['name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['head_pic'])) {
            $value = $data['head_pic'];
            $return = (string) $value;
            $this->class->reflFields['head_pic']->setValue($document, $return);
            $hydratedData['head_pic'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['birthday'])) {
            $value = $data['birthday'];
            $return = (string) $value;
            $this->class->reflFields['birthday']->setValue($document, $return);
            $hydratedData['birthday'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['place'])) {
            $value = $data['place'];
            $return = (string) $value;
            $this->class->reflFields['place']->setValue($document, $return);
            $hydratedData['place'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['educational'])) {
            $value = $data['educational'];
            $return = (string) $value;
            $this->class->reflFields['educational']->setValue($document, $return);
            $hydratedData['educational'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['certificate'])) {
            $value = $data['certificate'];
            $return = (string) $value;
            $this->class->reflFields['certificate']->setValue($document, $return);
            $hydratedData['certificate'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['phone'])) {
            $value = $data['phone'];
            $return = (string) $value;
            $this->class->reflFields['phone']->setValue($document, $return);
            $hydratedData['phone'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['code'])) {
            $value = $data['code'];
            $return = (string) $value;
            $this->class->reflFields['code']->setValue($document, $return);
            $hydratedData['code'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['email'])) {
            $value = $data['email'];
            $return = (string) $value;
            $this->class->reflFields['email']->setValue($document, $return);
            $hydratedData['email'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['qq'])) {
            $value = $data['qq'];
            $return = (string) $value;
            $this->class->reflFields['qq']->setValue($document, $return);
            $hydratedData['qq'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['years'])) {
            $value = $data['years'];
            $return = (int) $value;
            $this->class->reflFields['years']->setValue($document, $return);
            $hydratedData['years'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['wechat'])) {
            $value = $data['wechat'];
            $return = (string) $value;
            $this->class->reflFields['wechat']->setValue($document, $return);
            $hydratedData['wechat'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['location'])) {
            $value = $data['location'];
            $return = (string) $value;
            $this->class->reflFields['location']->setValue($document, $return);
            $hydratedData['location'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['region']) ? $data['region'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['region']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['region']->setValue($document, $return);
        $hydratedData['region'] = $return;

        /** @Many */
        $mongoData = isset($data['category']) ? $data['category'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['category']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['category']->setValue($document, $return);
        $hydratedData['category'] = $return;

        /** @Many */
        $mongoData = isset($data['lesson']) ? $data['lesson'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['lesson']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['lesson']->setValue($document, $return);
        $hydratedData['lesson'] = $return;

        /** @Field(type="string") */
        if (isset($data['bank'])) {
            $value = $data['bank'];
            $return = (string) $value;
            $this->class->reflFields['bank']->setValue($document, $return);
            $hydratedData['bank'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['bank_code'])) {
            $value = $data['bank_code'];
            $return = (string) $value;
            $this->class->reflFields['bank_code']->setValue($document, $return);
            $hydratedData['bank_code'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['description'])) {
            $value = $data['description'];
            $return = (string) $value;
            $this->class->reflFields['description']->setValue($document, $return);
            $hydratedData['description'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['experience'])) {
            $value = $data['experience'];
            $return = (string) $value;
            $this->class->reflFields['experience']->setValue($document, $return);
            $hydratedData['experience'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['price'])) {
            $value = $data['price'];
            $return = (string) $value;
            $this->class->reflFields['price']->setValue($document, $return);
            $hydratedData['price'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['teacher_count'])) {
            $value = $data['teacher_count'];
            $return = (int) $value;
            $this->class->reflFields['teacher_count']->setValue($document, $return);
            $hydratedData['teacher_count'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['amount'])) {
            $value = $data['amount'];
            $return = (string) $value;
            $this->class->reflFields['amount']->setValue($document, $return);
            $hydratedData['amount'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['use_amount'])) {
            $value = $data['use_amount'];
            $return = (string) $value;
            $this->class->reflFields['use_amount']->setValue($document, $return);
            $hydratedData['use_amount'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['skill']) ? $data['skill'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['skill']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['skill']->setValue($document, $return);
        $hydratedData['skill'] = $return;

        /** @Field(type="int") */
        if (isset($data['frozen'])) {
            $value = $data['frozen'];
            $return = (int) $value;
            $this->class->reflFields['frozen']->setValue($document, $return);
            $hydratedData['frozen'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['delete'])) {
            $value = $data['delete'];
            $return = (int) $value;
            $this->class->reflFields['delete']->setValue($document, $return);
            $hydratedData['delete'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['photo']) ? $data['photo'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['photo']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['photo']->setValue($document, $return);
        $hydratedData['photo'] = $return;

        /** @Field(type="string") */
        if (isset($data['user_score'])) {
            $value = $data['user_score'];
            $return = (string) $value;
            $this->class->reflFields['user_score']->setValue($document, $return);
            $hydratedData['user_score'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['teacher_score'])) {
            $value = $data['teacher_score'];
            $return = (string) $value;
            $this->class->reflFields['teacher_score']->setValue($document, $return);
            $hydratedData['teacher_score'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['is_reg'])) {
            $value = $data['is_reg'];
            $return = (int) $value;
            $this->class->reflFields['is_reg']->setValue($document, $return);
            $hydratedData['is_reg'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['serial_number'])) {
            $value = $data['serial_number'];
            $return = (string) $value;
            $this->class->reflFields['serial_number']->setValue($document, $return);
            $hydratedData['serial_number'] = $return;
        }

        /** @Field(type="id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = (string) $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['created_at'])) {
            $value = $data['created_at'];
            if ($value instanceof \MongoDate) { $date = new \DateTime(); $date->setTimestamp($value->sec); $return = $date; } else { $return = new \DateTime($value); }
            $this->class->reflFields['created_at']->setValue($document, clone $return);
            $hydratedData['created_at'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['updated_at'])) {
            $value = $data['updated_at'];
            if ($value instanceof \MongoDate) { $date = new \DateTime(); $date->setTimestamp($value->sec); $return = $date; } else { $return = new \DateTime($value); }
            $this->class->reflFields['updated_at']->setValue($document, clone $return);
            $hydratedData['updated_at'] = $return;
        }
        return $hydratedData;
    }
}